server:
  port: 8080

spring:
  application:
    name: 'library-service'

  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://postgres:5432/postgres?currentSchema=postgres}
    username: ${DB_USER:postgres}
    password: ${PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      database: ${REDIS_DATABASE:0}
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redis}
      timeout: ${REDIS_TIMEOUT:3000}

  jpa:
    properties:
        hibernate:
            default_schema: ${DEFAULT_SCHEMA:postgres}
            ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

  liquibase:
    default-schema: ${DEFAULT_SCHEMA:postgres}
    liquibase-schema: ${LIQUIBASE_SCHEMA:postgres}
    enabled: true

  sql:
    init:
      mode: always

  jmx:
    default-domain: ${spring.application.name}
    enabled: true

management:
  endpoints:
    jmx:
      exposure:
        include: '*'
    web:
      exposure:
        include:
          - prometheus
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    shutdown:
      enabled: true